import{_ as a,c as t,o as r,ae as o}from"./chunks/framework.BtEkjhVd.js";const u=JSON.parse('{"title":"OCR","description":"","frontmatter":{},"headers":[],"relativePath":"en/settings/ocr.md","filePath":"en/settings/ocr.md"}'),n={name:"en/settings/ocr.md"};function s(i,e,c,l,g,d){return r(),t("div",null,e[0]||(e[0]=[o('<h1 id="ocr" tabindex="-1">OCR <a class="header-anchor" href="#ocr" aria-label="Permalink to &quot;OCR&quot;">​</a></h1><p>OCR configuration guide to help you set up parameters and usage methods for image text recognition functionality.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>Language packages, select the language packages you need, Chinese and English are supported by default.</p><p>Currently using <a href="https://github.com/tesseract-ocr/tesseract" target="_blank" rel="noreferrer">Tesseract</a> as the OCR engine, <a href="https://tesseract-ocr.github.io/tessdoc/Data-Files#data-files-for-version-400-november-29-2016" target="_blank" rel="noreferrer">query languages</a>.</p><p>Separate with commas, for example: <code>chi_sim,eng</code>. When adding new language packages, the corresponding language packs will be downloaded automatically.</p>',6)]))}const h=a(n,[["render",s]]);export{u as __pageData,h as default};
