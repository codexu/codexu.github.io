import{_ as t,c as e,o as r,ae as i}from"./chunks/framework.Dgg8-8ov.js";const g=JSON.parse('{"title":"知识库","description":"","frontmatter":{},"headers":[],"relativePath":"zh/settings/rag.md","filePath":"zh/settings/rag.md"}'),l={name:"zh/settings/rag.md"};function o(p,a,n,s,h,c){return r(),e("div",null,a[0]||(a[0]=[i('<h1 id="知识库" tabindex="-1">知识库 <a class="header-anchor" href="#知识库" aria-label="Permalink to &quot;知识库&quot;">​</a></h1><p><img src="https://s2.loli.net/2025/07/10/57gNKq8CPa6kZ1V.png" alt="image.png"></p><h2 id="配置模型" tabindex="-1">配置模型 <a class="header-anchor" href="#配置模型" aria-label="Permalink to &quot;配置模型&quot;">​</a></h2><p>要使用知识库需要配置嵌入模型（必须）、重排序模型（可选），相关配置请参考 <a href="/zh/settings/model-config.html">模型配置</a>。</p><p>配置后可以在记录页面对话框中开启知识库功能：</p><p><img src="https://s2.loli.net/2025/07/10/DgjJU7rNypiH1kb.png" alt="image.png"></p><blockquote><p>开启过程中将检测模型可用状态。</p></blockquote><h2 id="知识库向量计算" tabindex="-1">知识库向量计算 <a class="header-anchor" href="#知识库向量计算" aria-label="Permalink to &quot;知识库向量计算&quot;">​</a></h2><p>知识库功能是基于 RAG 原理来实现的，通过将 Markdown 文件转换为向量进行存储和搜索，整个过程是通过嵌入模型来完成的。</p><p>首次使用时，如果写作页面中，如果已存在 Markdown 文件，可以先执行全量计算（可选）：</p><p><img src="https://s2.loli.net/2025/07/10/TErOmSFLPqo1Xtb.png" alt="image.png"></p><p>后续写作时不需要每次都执行全量计算，在写作时自动保存时会自动计算。</p><blockquote><p>此过程会消耗嵌入模型资源，可以酌情使用或采用免费模型。</p></blockquote><h2 id="参数设置" tabindex="-1">参数设置 <a class="header-anchor" href="#参数设置" aria-label="Permalink to &quot;参数设置&quot;">​</a></h2><p>如果你对知识库相关知识不了解，可以忽略，使用默认值即可。</p><p>使用知识库时，不一定可以完整的匹配到你需要的信息，通过调解参数，可以更加精确的控制知识库的检索效果：</p><ul><li>分块大小：文本分块的最大字符数，较大的分块可能包含更多上下文，但会增加向量计算的复杂度。</li><li>重叠大小：文本分块间的重叠字符数，较大的重叠可以保持上下文连贯性。</li><li>检索数量：检索时返回的相关文档数量，数量越多提供的信息可能更丰富，但也可能引入噪声。</li><li>相似度阈值：文档与查询的最小相似度阈值，只有超过此阈值的文档才会被返回。值范围 0.0-1.0，越高要求越严格。</li></ul>',17)]))}const m=t(l,[["render",o]]);export{g as __pageData,m as default};
